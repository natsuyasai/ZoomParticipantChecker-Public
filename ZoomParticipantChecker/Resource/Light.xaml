<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="WindowStyle" TargetType="Window" BasedOn="{StaticResource {x:Type Window}}">
        <Setter Property="Background" Value="#000000"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="32"
                    ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                    UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Opacity="0.50" BlurRadius="20" ShadowDepth="0" Color="#E0E0E0"/>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- グリッド -->
    <Style x:Key="GridStyle" TargetType="Grid">
        <Setter Property="Background" Value="#FFFFFF"></Setter>
    </Style>
    <!-- ボタン用 -->
    <Style x:Key="FlatButton" TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="2">
                        <ContentPresenter 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#cccccc"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#e6e6e6"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#cccccc"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="true">
                <Setter Property="Foreground" Value="#000000"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#b0b0b0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ヘッダボタン用 -->
    <Style x:Key="HeaderButton" TargetType="Button" BasedOn="{StaticResource FlatButton}">
        <Setter Property="Height" Value="24px"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
    </Style>
    <!-- ヘッダボタン用 -->
    <Style x:Key="HeaderSystemButton" TargetType="Button" BasedOn="{StaticResource FlatButton}">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="FontFamily" Value="Marlett"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Width" Value="32px" />
        <Setter Property="Height" Value="32px" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="0">
                        <ContentPresenter 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ヘッダボタン用 -->
    <Style x:Key="HeaderCloseSystemButton" TargetType="Button" BasedOn="{StaticResource HeaderSystemButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#e3423e"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#8b0a14"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- リストビュー用 -->
    <Style x:Key="ListViewStyle" TargetType="ListView" BasedOn="{StaticResource {x:Type ListBox}}">
    </Style>
    <!-- ラベル用 -->
    <Style x:Key="LablelStyle" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
    </Style>
    <!-- チェックボックス用 -->
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
    </Style>
    <!-- テキストブロック用 -->
    <Style x:Key="TextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
    </Style>
    <!-- テキストボックス用 -->
    <Style x:Key="TextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
    </Style>
    <!-- テキストボックス用 -->
    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox" BasedOn="{StaticResource {x:Type PasswordBox}}">
    </Style>
    <!-- コンボボックス用 -->
    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#595959" />
    <SolidColorBrush x:Key="ComboBoxMauseOverlBorderBrush" Color="#000000" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#00000000" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#cccccc" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#ffffff" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#cccccc" />
    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid Height="32px">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
                    BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
                    CornerRadius="2" 
                    BorderThickness="1.4" 
                    Background="{StaticResource ComboBoxNormalBackgroundBrush}">
            </Border>
            <Border Grid.Column="1" Margin="1, 1, 1, 1" 
                    BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
                    Name="ButtonBorder"
                    CornerRadius="2" 
                    BorderThickness="0" 
                    Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

            <Path Name="Arrow" Grid.Column="1" 
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                  HorizontalAlignment="Center" Fill="#000000"
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ComboBoxMauseOverlBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="FlatComboBox"  TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}">
        <Setter Property="TextElement.Foreground" Value="#000000"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                                      ClickMode="Press" Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                        <ContentPresenter Name="ContentSite" Margin="8, 4, 4, 4" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>

                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                               Focusable="False" AllowsTransparency="True"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="#f2f2f2" Margin="0, 0, 0, 0"
                                        CornerRadius="2" BorderThickness="1,0,1,1" 
                                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- コンテキストメニュー用 -->
    <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource {x:Type ContextMenu}}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border 
                        Name="Border"
                        Background="#eeeeee"
                        BorderBrush="#eeeeee"
                        BorderThickness="1" >
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0,4,0,4"/>
                            <Setter TargetName="Border" Property="CornerRadius" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentPresenter 
                    Name="HeaderHost"
                    Grid.Column="0"
                    Margin="8,0,8,0"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#e6e6e6"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#cccccc"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="MenuItemStyle" TargetType="MenuItem"  BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="MenuItem.Height" Value="32px" />
        <Setter Property="MenuItem.FontSize" Value="13px" />
    </Style>

</ResourceDictionary>